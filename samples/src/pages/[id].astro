---
import { getCollection } from "astro:content"
import type { GetStaticPaths } from "astro";
import { basename } from 'node:path'
import Layout from '../layouts/Layout.astro'

export const getStaticPaths: GetStaticPaths = (async () => {
	const coll = await getCollection('designs')
	
	return coll.map((entry) => {
    const pathname = basename(entry.id, '.dsgn')

    return {
      params: {id: pathname},
      props: entry
    }
	})
})

const {data} = Astro.props
---
<Layout title={data.design.name}>
  <h1 data-message={JSON.stringify(data)}>{data.design.author}</h1>
  <h2>{data.design.name}</h2>
  <div class="container"></div>
</Layout>

<style is:global>
  .container {
    align-items: center;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .container img {
    max-width: 400px;
  }
</style>

<script>
  import { DsgnResolver } from 'pixelfactory'
  const $design = document.querySelector('h1')?.getAttribute('data-message')
  const design = JSON.parse($design)

  const resolver = new DsgnResolver(design)
  const imgs = await resolver.getImages()
  imgs.forEach(blob => {
    const $newImg = new Image()
    const imageUrl = URL.createObjectURL(blob);
    $newImg.src = imageUrl

    document.querySelector('.container')!.appendChild($newImg)
  })
</script>